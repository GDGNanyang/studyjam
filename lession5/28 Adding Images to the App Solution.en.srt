1
00:00:00,460 --> 00:00:03,740
在复制了所有图片之后，需要在安卓的主菜单中更新桌面启动图标，
After copying over the assets, updating the launcher icon

2
00:00:03,740 --> 00:00:06,270
并且在Utility类中添加辅助函数，
in the Android manifest, and adding the Helper methods

3
00:00:06,270 --> 00:00:08,760
为此，我们需要修正
to the Utility class, we need to modify the

4
00:00:08,760 --> 00:00:13,770
DetailFragment和 ForecastAdapter这两个类。在DetailFragment类的
DetailFragment and ForecastAdapter classes. In the DetailFragment class, in the

5
00:00:13,770 --> 00:00:16,940
onLoadFinished方法中，我们通过获取光标的位置来读取指定的天气情况，
onLoadFinished method, we read the weather condition code from

6
00:00:16,940 --> 00:00:19,670
然后将它传递给Utility 
the cursor, then we pass it into the Utility

7
00:00:19,670 --> 00:00:22,340
Helper函数，来获取填充视图的彩色图标。
Helper method to get the colored icon for setting

8
00:00:22,340 --> 00:00:25,610
在详细页面的加载完成方法里，
onto the image view. In the detail fragment on load

9
00:00:25,610 --> 00:00:29,170
我们从光标处读取天气情况，
finish method, we read the weather condition code from the cursor.

10
00:00:29,170 --> 00:00:32,299
并将它传递给Utility Helper函数，
Then we pass this into the Utility helper method, to get

11
00:00:32,299 --> 00:00:35,430
来获取彩色图标的资源ID，
the Resource ID for the colored icon, in order to set

12
00:00:35,430 --> 00:00:38,770
就是为了将彩色图标填充到视图里。天气预报的适配器变化是一件
it onto the Image View. The forecast adapter change is a

13
00:00:38,770 --> 00:00:41,660
有些棘手的事情。这是因为对于今天的天气我们想使用彩色图标，
little trickier because we want to use the colored icon for the

14
00:00:41,660 --> 00:00:44,420
而对于未来的天气又想使用灰色的图标。
today layout. And we want to use a grey icon for

15
00:00:44,420 --> 00:00:47,470
为了将这两者区分开来，
the other days. In order to distinguish between the other two,

16
00:00:47,470 --> 00:00:50,700
我们可以根据当前光标的位置，来确定获取视图的类型。
we call get item view type given the current cursor position.

17
00:00:50,700 --> 00:00:53,470
如果视图类型是今天，我们就从光标处获取今天的天气情况
If the view type is today, then we get the weather condition

18
00:00:53,470 --> 00:00:56,670
并从helper函数中获取彩色图标的资源ID，
code from the cursor. Then we get the resource ID for the

19
00:00:56,670 --> 00:00:59,820
最后在视图中加载彩色图标。
colored image from the helper method. And then we set that onto

20
00:00:59,820 --> 00:01:02,770
如果视图类型是未来的某一天，
the image view. If the view type is for a future day, then

21
00:01:02,770 --> 00:01:06,150
同样，我们先从光标处获取未来的天气情况，
we read the whether condition code from the cursor. Then we pass

22
00:01:06,150 --> 00:01:09,150
接着从helper函数中获取灰色图标的资源ID，
it into the helper method to getthe resource ID the gray

23
00:01:09,150 --> 00:01:12,180
最终在视图中加载灰色图标。
icon and then we send that on to the image view. If

24
00:01:12,180 --> 00:01:15,830
如果你先前使用硬代码编写图像在视图中添加了一个布局，现在你应该将它删除
you previously hard coded an image into the layout, then you should remove

25
00:01:15,830 --> 00:01:18,860
否则，在app启动时，
that value now. Otherwise, on app launch, it will load

26
00:01:18,860 --> 00:01:21,480
它会先加载图像占位符然后跳出当前图标。
up the placeholder image and then flash to the actual

27
00:01:21,480 --> 00:01:25,170
既然手机用户界面的的框架已经很完善了，
icon. Now that the wire frame implementation for the phone

28
00:01:25,170 --> 00:01:28,170
让我们来看看平板的用户界面。
UI is pretty much complete, let's look at the tablet UI.

